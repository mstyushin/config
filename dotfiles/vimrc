" macvim distribution seems to have it disabled by default
syntax on

" show line numbers
set number

" pasting works better in insert mode
set paste

" allow language plugins to work correctly
filetype on
filetype plugin on
filetype plugin indent on

" display title of current file in terminal title bar
set title

" tab = 4 spaces
set tabstop=4

" shift+> = 4 spaces
set shiftwidth=4

" tab uses spaces
set expandtab

" line number of cursor blinks
set cursorline

" Format status line to show current file
set statusline=\ %f

" Always show status line
set laststatus=2

" enable cooler colors
"set termguicolors

" new splits open below the current window
set splitbelow

" integrate vim clipboard with system clipboard
set clipboard+=unnamed

" ==================================================
" go-vim config
" ==================================================

" automatically highlight variable your cursor is on
let g:go_auto_sameids = 0

" enable syntax highlighting
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_highlight_generate_tags = 1
" ==================================================

" ==================================================
" python-mode config
" ==================================================

" python executables for different plugins
let g:pymode_python = 'python3'
let g:syntastic_python_python_exec = 'python3'

" rope
let g:pymode_rope = 1
let g:pymode_rope_completion = 1
let g:pymode_rope_complete_on_dot = 1
"let g:pymode_rope_auto_project=0
let g:pymode_rope_enable_autoimport = 1
"let g:pymode_rope_autoimport_generate=0
"let g:pymode_rope_guess_project=0

" open definitions found in a new buffer
let g:pymode_rope_goto_definition_cmd = 'e'

" default goto definition binding really sucks
let g:pymode_rope_goto_definition_bind = 'gd'

" documentation
let g:pymode_doc = 1
let g:pymode_doc_bind = 'K'

" lints
let g:pymode_lint = 1

" virtualenv
let g:pymode_virtualenv = 1

" syntax highlight
let g:pymode_syntax = 1
let g:pymode_syntax_slow_sync = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_print_as_function = g:pymode_syntax_all
let g:pymode_syntax_highlight_async_await = g:pymode_syntax_all
let g:pymode_syntax_highlight_equal_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_stars_operator = g:pymode_syntax_all
let g:pymode_syntax_highlight_self = g:pymode_syntax_all
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_string_formatting = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all
let g:pymode_syntax_string_format = g:pymode_syntax_all
let g:pymode_syntax_string_templates = g:pymode_syntax_all
let g:pymode_syntax_doctests = g:pymode_syntax_all
let g:pymode_syntax_builtin_objs = g:pymode_syntax_all
let g:pymode_syntax_builtin_types = g:pymode_syntax_all
let g:pymode_syntax_highlight_exceptions = g:pymode_syntax_all
let g:pymode_syntax_docstrings = g:pymode_syntax_all
" ==================================================

" ==================================================
" NERDTree config
" ==================================================

" Load NERDTree only if vim is run without arguments
autocmd VimEnter * if !argc() | NERDTree | endif
" Let me see my gitignore finally!
let NERDTreeShowHidden=1
" ==================================================

" ==================================================
" Airline config
" ==================================================
let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" unicode symbols
let g:airline_left_sep = '¬ª'
let g:airline_left_sep = '‚ñ∂'
let g:airline_right_sep = '¬´'
let g:airline_right_sep = '‚óÄ'
let g:airline_symbols.crypt = 'üîí'
let g:airline_symbols.linenr = '‚ò∞'
let g:airline_symbols.linenr = '‚êä'
let g:airline_symbols.linenr = '‚ê§'
let g:airline_symbols.linenr = '¬∂'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '„èë'
let g:airline_symbols.branch = '‚éá'
let g:airline_symbols.paste = 'œÅ'
let g:airline_symbols.paste = '√û'
let g:airline_symbols.paste = '‚à•'
let g:airline_symbols.spell = 'Íû®'
let g:airline_symbols.notexists = '…Ü'
let g:airline_symbols.whitespace = 'Œû'

" powerline symbols
let g:airline_left_sep = 'ÓÇ∞'
let g:airline_left_alt_sep = 'ÓÇ±'
let g:airline_right_sep = 'ÓÇ≤'
let g:airline_right_alt_sep = 'ÓÇ≥'
let g:airline_symbols.branch = 'ÓÇ†'
let g:airline_symbols.readonly = 'ÓÇ¢'
let g:airline_symbols.linenr = '‚ò∞'
let g:airline_symbols.maxlinenr = 'ÓÇ°'

